From 359f9205ae55d3d4ea0bc540662c794d4c52fd05 Mon Sep 17 00:00:00 2001
From: Kelsea Mann <kelseamann@kelseas-mbp.lan>
Date: Mon, 25 Aug 2025 12:19:29 -0600
Subject: [PATCH 1/6] feat: Add Additional Packages step with PatternFly
 components

- Implemented Additional Packages step using PatternFly v6 components
- Added ToggleGroup for Available/Selected filtering
- Used DataList with compact rows for package display
- Implemented expandable rows for package group descriptions
- Added search functionality and pagination
- Note: This is an early implementation - row headers are not yet present
  (planned for future development)
---
 .../AdditionalPackages/AdditionalPackages.tsx | 345 ++++++++++++++++++
 src/app/AdditionalPackages/index.tsx          |   2 +
 src/app/routes.tsx                            |   8 +
 3 files changed, 355 insertions(+)
 create mode 100644 src/app/AdditionalPackages/AdditionalPackages.tsx
 create mode 100644 src/app/AdditionalPackages/index.tsx

diff --git a/src/app/AdditionalPackages/AdditionalPackages.tsx b/src/app/AdditionalPackages/AdditionalPackages.tsx
new file mode 100644
index 0000000..9de46d0
--- /dev/null
+++ b/src/app/AdditionalPackages/AdditionalPackages.tsx
@@ -0,0 +1,345 @@
+import * as React from 'react';
+import {
+  PageSection,
+  PageSectionVariants,
+  Title,
+  Alert,
+  AlertVariant,
+  SearchInput,
+  Button,
+  ButtonVariant,
+  Checkbox,
+  Pagination,
+  PaginationVariant,
+  ToggleGroup,
+  ToggleGroupItem,
+  DataList,
+  DataListItem,
+  DataListItemRow,
+  DataListItemCells,
+  DataListCell,
+  DataListToggle,
+  DataListContent,
+} from '@patternfly/react-core';
+
+// Mock data types based on the osbuild implementation
+interface Package {
+  name: string;
+  summary: string;
+  repository: 'distro' | 'custom' | 'recommended';
+  type?: string;
+  module_name?: string;
+  stream?: string;
+  end_date?: string;
+}
+
+interface PackageGroup {
+  name: string;
+  description: string;
+  repository: 'distro' | 'custom' | 'recommended';
+  package_list: string[];
+}
+
+// Mock data for demonstration
+const mockPackages: Package[] = [
+  { name: 'httpd', summary: 'Apache HTTP Server', repository: 'distro' },
+  { name: 'nginx', summary: 'High performance web server', repository: 'distro' },
+  { name: 'postgresql', summary: 'PostgreSQL database server', repository: 'distro' },
+  { name: 'docker', summary: 'Docker container runtime', repository: 'distro' },
+  { name: 'ansible', summary: 'IT automation tool', repository: 'distro' },
+  { name: 'git', summary: 'Version control system', repository: 'distro' },
+  { name: 'vim', summary: 'Vi IMproved text editor', repository: 'distro' },
+  { name: 'wget', summary: 'Retrieve files from the web', repository: 'distro' },
+  { name: 'curl', summary: 'Transfer data from or to a server', repository: 'distro' },
+  { name: 'python3', summary: 'Python 3 programming language', repository: 'distro' },
+];
+
+const mockGroups: PackageGroup[] = [
+  {
+    name: 'development-tools',
+    description: 'Development tools including compilers, debuggers, and build tools',
+    repository: 'distro',
+    package_list: ['gcc', 'make', 'cmake', 'git', 'vim', 'emacs']
+  },
+  {
+    name: 'web-server',
+    description: 'Web server packages and related tools',
+    repository: 'distro',
+    package_list: ['httpd', 'nginx', 'php', 'mysql']
+  },
+  {
+    name: 'system-tools',
+    description: 'System administration and monitoring tools',
+    repository: 'distro',
+    package_list: ['htop', 'iotop', 'netstat', 'tcpdump']
+  }
+];
+
+export const AdditionalPackages: React.FunctionComponent = () => {
+  // State management
+  const [searchTerm, setSearchTerm] = React.useState('');
+  const [perPage, setPerPage] = React.useState(10);
+  const [page, setPage] = React.useState(1);
+  const [selectedPackages, setSelectedPackages] = React.useState<Set<string>>(new Set());
+  const [selectedGroups, setSelectedGroups] = React.useState<Set<string>>(new Set());
+  const [expandedGroups, setExpandedGroups] = React.useState<Set<string>>(new Set());
+  const [toggleSelected, setToggleSelected] = React.useState<'toggle-available' | 'toggle-selected'>('toggle-available');
+
+  // Filtered data based on search
+  const allFilteredPackages = React.useMemo(() => {
+    return mockPackages.filter(pkg =>
+      pkg.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
+      pkg.summary.toLowerCase().includes(searchTerm.toLowerCase())
+    );
+  }, [searchTerm]);
+
+  const allFilteredGroups = React.useMemo(() => {
+    return mockGroups.filter(group =>
+      group.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
+      group.description.toLowerCase().includes(searchTerm.toLowerCase())
+    );
+  }, [searchTerm]);
+
+  const filteredPackages = React.useMemo(() => {
+    let filtered = mockPackages.filter(pkg =>
+      pkg.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
+      pkg.summary.toLowerCase().includes(searchTerm.toLowerCase())
+    );
+    
+    // Apply toggle filter - show only selected packages when toggle is on "selected"
+    if (toggleSelected === 'toggle-selected') {
+      filtered = filtered.filter(pkg => selectedPackages.has(pkg.name));
+    }
+    
+    return filtered;
+  }, [searchTerm, toggleSelected, selectedPackages]);
+
+  const filteredGroups = React.useMemo(() => {
+    let filtered = mockGroups.filter(group =>
+      group.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
+      group.description.toLowerCase().includes(searchTerm.toLowerCase())
+    );
+    
+    // Apply toggle filter - show only selected groups when toggle is on "selected"
+    if (toggleSelected === 'toggle-selected') {
+      filtered = filtered.filter(group => selectedGroups.has(group.name));
+    }
+    
+    return filtered;
+  }, [searchTerm, toggleSelected, selectedGroups]);
+
+  // Pagination
+  const startIndex = (page - 1) * perPage;
+  const endIndex = startIndex + perPage;
+  const paginatedPackages = filteredPackages.slice(startIndex, endIndex);
+  const paginatedGroups = filteredGroups.slice(startIndex, endIndex);
+
+  // Event handlers
+  const handleSearch = (event: React.FormEvent<HTMLInputElement>, value: string) => {
+    setSearchTerm(value);
+    setPage(1);
+  };
+
+  const handleClear = () => {
+    setSearchTerm('');
+    setPage(1);
+  };
+
+  const handleToggleChange = (event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>, selected: boolean) => {
+    const buttonId = event.currentTarget.getAttribute('data-id');
+    if (buttonId && (buttonId === 'toggle-available' || buttonId === 'toggle-selected')) {
+      setToggleSelected(buttonId as 'toggle-available' | 'toggle-selected');
+      setPage(1); // Reset to first page when switching views
+    }
+  };
+
+  const handlePackageSelect = (event: React.FormEvent<HTMLInputElement>, checked: boolean) => {
+    const packageName = event.currentTarget.getAttribute('data-package-name');
+    if (packageName) {
+      const newSelected = new Set(selectedPackages);
+      if (checked) {
+        newSelected.add(packageName);
+      } else {
+        newSelected.delete(packageName);
+      }
+      setSelectedPackages(newSelected);
+    }
+  };
+
+  const handleGroupSelect = (event: React.FormEvent<HTMLInputElement>, checked: boolean) => {
+    const groupName = event.currentTarget.getAttribute('data-group-name');
+    if (groupName) {
+      const newSelected = new Set(selectedGroups);
+      if (checked) {
+        newSelected.add(groupName);
+      } else {
+        newSelected.delete(groupName);
+      }
+      setSelectedGroups(newSelected);
+    }
+  };
+
+  const handleGroupExpand = (groupName: string) => {
+    const newExpanded = new Set(expandedGroups);
+    if (newExpanded.has(groupName)) {
+      newExpanded.delete(groupName);
+    } else {
+      newExpanded.add(groupName);
+    }
+    setExpandedGroups(newExpanded);
+  };
+
+  // Use inline handlers to match PF v6 types
+  const onSetPage = (
+    _event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>,
+    newPage: number
+  ) => setPage(newPage);
+
+  const onPerPageSelect = (
+    _event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>,
+    newPerPage: number
+  ) => {
+    setPerPage(newPerPage);
+    setPage(1);
+  };
+
+  const totalItems = filteredPackages.length + filteredGroups.length;
+  const selectedCount = selectedPackages.size + selectedGroups.size;
+
+  return (
+    <PageSection variant={PageSectionVariants.default}>
+      <div style={{ marginBottom: '20px' }}>
+        <h1 style={{ fontSize: '2rem', margin: '0 0 10px 0' }}>
+          Additional packages
+        </h1>
+        <p style={{ fontSize: '1rem', color: '#666', margin: 0 }}>
+          Blueprints created with Images include all required packages.
+        </p>
+      </div>
+      
+      <Alert variant={AlertVariant.info} isInline title="Search for package groups">
+        Search for package groups by starting your search with the '@' character. 
+        A single '@' as search input lists all available package groups.
+      </Alert>
+
+      {/* Search and Controls */}
+      <div style={{ margin: '20px 0', display: 'flex', gap: '20px', alignItems: 'center', flexWrap: 'wrap' }}>
+        <SearchInput
+          placeholder="Search packages"
+          value={searchTerm}
+          onChange={handleSearch}
+          onClear={handleClear}
+          aria-label="Search packages"
+        />
+        
+        <ToggleGroup>
+          <ToggleGroupItem
+            text={`Available${totalItems ? ` (${totalItems})` : ''}`}
+            buttonId="toggle-available"
+            isSelected={toggleSelected === 'toggle-available'}
+            onChange={handleToggleChange}
+          />
+          <ToggleGroupItem
+            text={`Selected${selectedCount ? ` (${selectedCount})` : ''}`}
+            buttonId="toggle-selected"
+            isSelected={toggleSelected === 'toggle-selected'}
+            onChange={handleToggleChange}
+          />
+        </ToggleGroup>
+
+        <div style={{ marginLeft: 'auto' }}>
+          <span>Items per page: </span>
+          <select 
+            value={perPage} 
+            onChange={(e) => setPerPage(Number(e.target.value))}
+            style={{ padding: '5px', marginLeft: '5px' }}
+          >
+            <option value={5}>5</option>
+            <option value={10}>10</option>
+            <option value={20}>20</option>
+          </select>
+        </div>
+      </div>
+
+      {/* Packages Display using DataList */}
+      <DataList aria-label="Packages list" isCompact>
+        {/* Package Groups */}
+        {paginatedGroups.map((group) => (
+          <DataListItem key={group.name} isExpanded={expandedGroups.has(group.name)}>
+            <DataListItemRow>
+              <DataListToggle
+                onClick={() => handleGroupExpand(group.name)}
+                isExpanded={expandedGroups.has(group.name)}
+                id={`toggle-${group.name}`}
+                aria-controls={`expand-${group.name}`}
+              />
+              <DataListItemCells
+                dataListCells={[
+                  <DataListCell key="checkbox" width={1}>
+                    <Checkbox
+                      id={`group-${group.name}`}
+                      isChecked={selectedGroups.has(group.name)}
+                      onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handleGroupSelect(event, checked)}
+                      aria-label={`Select group ${group.name}`}
+                      data-group-name={group.name}
+                    />
+                  </DataListCell>,
+                  <DataListCell key="name" width={3}>
+                    <span style={{ fontWeight: 'bold', color: '#0066cc' }}>@{group.name}</span>
+                  </DataListCell>,
+                  <DataListCell key="stream" width={2}>N/A</DataListCell>,
+                  <DataListCell key="date" width={2}>N/A</DataListCell>
+                ]}
+              />
+            </DataListItemRow>
+            <DataListContent
+              aria-label={`${group.name} description`}
+              id={`expand-${group.name}`}
+              isHidden={!expandedGroups.has(group.name)}
+            >
+              <div style={{ padding: '16px', backgroundColor: '#f8f9fa' }}>
+                <strong>Description:</strong> {group.description}
+              </div>
+            </DataListContent>
+          </DataListItem>
+        ))}
+
+        {/* Individual Packages */}
+        {paginatedPackages.map((pkg) => (
+          <DataListItem key={pkg.name}>
+            <DataListItemRow>
+              <DataListItemCells
+                dataListCells={[
+                  <DataListCell key="checkbox" width={1}>
+                    <Checkbox
+                      id={`package-${pkg.name}`}
+                      isChecked={selectedPackages.has(pkg.name)}
+                      onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handlePackageSelect(event, checked)}
+                      aria-label={`Select package ${pkg.name}`}
+                      data-package-name={pkg.name}
+                    />
+                  </DataListCell>,
+                  <DataListCell key="name" width={3}>
+                    <span style={{ fontWeight: 'bold' }}>{pkg.name}</span>
+                  </DataListCell>,
+                  <DataListCell key="stream" width={2}>{pkg.stream || 'N/A'}</DataListCell>,
+                  <DataListCell key="date" width={2}>{pkg.end_date || 'N/A'}</DataListCell>
+                ]}
+              />
+            </DataListItemRow>
+          </DataListItem>
+        ))}
+      </DataList>
+
+      {/* Bottom Pagination */}
+      <Pagination
+        itemCount={totalItems}
+        perPage={perPage}
+        page={page}
+        onSetPage={onSetPage}
+        onPerPageSelect={onPerPageSelect}
+        variant={PaginationVariant.bottom}
+      />
+    </PageSection>
+  );
+};
diff --git a/src/app/AdditionalPackages/index.tsx b/src/app/AdditionalPackages/index.tsx
new file mode 100644
index 0000000..dea12d0
--- /dev/null
+++ b/src/app/AdditionalPackages/index.tsx
@@ -0,0 +1,2 @@
+export { AdditionalPackages } from './AdditionalPackages';
+
diff --git a/src/app/routes.tsx b/src/app/routes.tsx
index 0950817..6f348c6 100644
--- a/src/app/routes.tsx
+++ b/src/app/routes.tsx
@@ -5,6 +5,7 @@ import { Support } from '@app/Support/Support';
 import { GeneralSettings } from '@app/Settings/General/GeneralSettings';
 import { ProfileSettings } from '@app/Settings/Profile/ProfileSettings';
 import { NotFound } from '@app/NotFound/NotFound';
+import { AdditionalPackages } from '@app/AdditionalPackages';
 
 export interface IAppRoute {
   label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout
@@ -32,6 +33,13 @@ const routes: AppRouteConfig[] = [
     path: '/',
     title: 'PatternFly Seed | Main Dashboard',
   },
+  {
+    element: <AdditionalPackages />,
+    exact: true,
+    label: 'Additional Packages',
+    path: '/additional-packages',
+    title: 'PatternFly Seed | Additional Packages',
+  },
   {
     element: <Support />,
     exact: true,
-- 
2.32.0 (Apple Git-132)


From c580d6703874bfd3437a6f68893ad2589511def3 Mon Sep 17 00:00:00 2001
From: Kelsea Mann <kelseamann@kelseas-mbp.lan>
Date: Mon, 25 Aug 2025 16:50:40 -0600
Subject: [PATCH 2/6] Add working Additional Packages component with Custom
 Repositories and Additional Packages steps

- Implemented two-step workflow with left sidebar navigation
- Added Custom Repositories step with repository table, search, filters, and All/Selected toggles
- Added Additional Packages step with package table, search, Available/Selected toggles, and pagination
- Used flexbox layout for reliable sidebar positioning
- Both steps visible simultaneously for better workflow visibility
- Active step highlighting in sidebar navigation
- Matches osbuild image-builder-frontend repository structure
---
 package-lock.json                             |  99 ++--
 package.json                                  |   1 +
 .../AdditionalPackages/AdditionalPackages.tsx | 443 ++++++++++++++----
 3 files changed, 406 insertions(+), 137 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index b774a73..24e350f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -12,6 +12,7 @@
         "@patternfly/react-core": "^6.0.0",
         "@patternfly/react-icons": "^6.0.0",
         "@patternfly/react-styles": "^6.0.0",
+        "@patternfly/react-table": "^6.3.1",
         "react": "^18",
         "react-dom": "^18",
         "sirv-cli": "^3.0.0"
@@ -1814,40 +1815,57 @@
       }
     },
     "node_modules/@patternfly/react-core": {
-      "version": "6.0.0",
-      "resolved": "https://registry.npmjs.org/@patternfly/react-core/-/react-core-6.0.0.tgz",
-      "integrity": "sha512-UKFj9+YzBY+FfEDsLONgOM4N0e8SPV/27/UzNRiJ0gpgqbw2POuXwLpjGSRTTIUuCaLaGGM5PeTSj7mMB73ykw==",
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/@patternfly/react-core/-/react-core-6.3.1.tgz",
+      "integrity": "sha512-1qV20nU4M6PA28qnikH9fPLQlkteaZZToFlATjBNBw7aUI6zIvj7U0akkHz8raWcfHAI+tAzGV7dfKjiv035/g==",
       "dependencies": {
-        "@patternfly/react-icons": "^6.0.0",
-        "@patternfly/react-styles": "^6.0.0",
-        "@patternfly/react-tokens": "^6.0.0",
-        "focus-trap": "7.6.0",
-        "react-dropzone": "^14.2.3",
-        "tslib": "^2.7.0"
+        "@patternfly/react-icons": "^6.3.1",
+        "@patternfly/react-styles": "^6.3.1",
+        "@patternfly/react-tokens": "^6.3.1",
+        "focus-trap": "7.6.4",
+        "react-dropzone": "^14.3.5",
+        "tslib": "^2.8.1"
       },
       "peerDependencies": {
-        "react": "^17 || ^18",
-        "react-dom": "^17 || ^18"
+        "react": "^17 || ^18 || ^19",
+        "react-dom": "^17 || ^18 || ^19"
       }
     },
     "node_modules/@patternfly/react-icons": {
-      "version": "6.0.0",
-      "resolved": "https://registry.npmjs.org/@patternfly/react-icons/-/react-icons-6.0.0.tgz",
-      "integrity": "sha512-ZFrsBVKrAp0DZrPOss98OA/EVUL4F0frXhR1uBId9+3ZrRArdKTgYgmQUCeSzMbxnSlxpmm3a2L05XQ36VUVbw==",
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/@patternfly/react-icons/-/react-icons-6.3.1.tgz",
+      "integrity": "sha512-uiMounSIww1iZLM4pq+X8c3upzwl9iowXRPjR5CA8entb70lwgAXg3PqvypnuTAcilTq1Y3k5sFTqkhz7rgKcQ==",
       "peerDependencies": {
-        "react": "^17 || ^18",
-        "react-dom": "^17 || ^18"
+        "react": "^17 || ^18 || ^19",
+        "react-dom": "^17 || ^18 || ^19"
       }
     },
     "node_modules/@patternfly/react-styles": {
-      "version": "6.0.0",
-      "resolved": "https://registry.npmjs.org/@patternfly/react-styles/-/react-styles-6.0.0.tgz",
-      "integrity": "sha512-fJFMB89sTRGlZTzTLmpRmthgOXqcN078scHMFJ3ttfi2D2btnem5oZrxmQ/gPZkZOxR+9MqwKDB6l3F5x1SqLQ=="
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/@patternfly/react-styles/-/react-styles-6.3.1.tgz",
+      "integrity": "sha512-hyb+PlO8YITjKh2wBvjdeZhX6FyB3hlf4r6yG4rPOHk4SgneXHjNSdGwQ3szAxgGqtbENCYtOqwD/8ai72GrxQ=="
+    },
+    "node_modules/@patternfly/react-table": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/@patternfly/react-table/-/react-table-6.3.1.tgz",
+      "integrity": "sha512-ZndBbPcMr/vInP5eELRe9m7MWzRoejRAhWx+25xOdjVAd31/CmMK1nBgZk4QAXaWjH1P+uZaZYsTgr/FMTte2g==",
+      "dependencies": {
+        "@patternfly/react-core": "^6.3.1",
+        "@patternfly/react-icons": "^6.3.1",
+        "@patternfly/react-styles": "^6.3.1",
+        "@patternfly/react-tokens": "^6.3.1",
+        "lodash": "^4.17.21",
+        "tslib": "^2.8.1"
+      },
+      "peerDependencies": {
+        "react": "^17 || ^18 || ^19",
+        "react-dom": "^17 || ^18 || ^19"
+      }
     },
     "node_modules/@patternfly/react-tokens": {
-      "version": "6.0.0",
-      "resolved": "https://registry.npmjs.org/@patternfly/react-tokens/-/react-tokens-6.0.0.tgz",
-      "integrity": "sha512-xd0ynDkiIW2rp8jz4TNvR4Dyaw9kSMkZdsuYcLlFXCVmvX//Mnl4rhBnid/2j2TaqK0NbkyTTPnPY/BU7SfLVQ=="
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/@patternfly/react-tokens/-/react-tokens-6.3.1.tgz",
+      "integrity": "sha512-wt/xKU1tGCDXUueFb+8/Cwxlm4vUD/Xl26O8MxbSLm6NZAHOUPwytJ7gugloGSPvc/zcsXxEgKANL8UZNO6DTw=="
     },
     "node_modules/@pkgr/core": {
       "version": "0.1.1",
@@ -3642,9 +3660,9 @@
       }
     },
     "node_modules/attr-accept": {
-      "version": "2.2.2",
-      "resolved": "https://registry.npmjs.org/attr-accept/-/attr-accept-2.2.2.tgz",
-      "integrity": "sha512-7prDjvt9HmqiZ0cl5CRjtS84sEyhsHP2coDkaZKRKVfCDo9s7iw7ChVmar78Gu9pC4SoR/28wFu/G5JJhTnqEg==",
+      "version": "2.2.5",
+      "resolved": "https://registry.npmjs.org/attr-accept/-/attr-accept-2.2.5.tgz",
+      "integrity": "sha512-0bDNnY/u6pPwHDMoF0FieU354oBi0a8rD9FcsLwzcGWbc8KS8KPIi7y+s13OlVY+gMWc/9xEMUgNE6Qm8ZllYQ==",
       "engines": {
         "node": ">=4"
       }
@@ -7927,11 +7945,11 @@
       }
     },
     "node_modules/file-selector": {
-      "version": "0.6.0",
-      "resolved": "https://registry.npmjs.org/file-selector/-/file-selector-0.6.0.tgz",
-      "integrity": "sha512-QlZ5yJC0VxHxQQsQhXvBaC7VRJ2uaxTf+Tfpu4Z/OcVQJVpZO+DGU0rkoVW5ce2SccxugvpBJoMvUs59iILYdw==",
+      "version": "2.1.2",
+      "resolved": "https://registry.npmjs.org/file-selector/-/file-selector-2.1.2.tgz",
+      "integrity": "sha512-QgXo+mXTe8ljeqUFaX3QVHc5osSItJ/Km+xpocx0aSqWGMSCf6qYs/VnzZgS864Pjn5iceMRFigeAV7AfTlaig==",
       "dependencies": {
-        "tslib": "^2.4.0"
+        "tslib": "^2.7.0"
       },
       "engines": {
         "node": ">= 12"
@@ -8232,10 +8250,9 @@
       }
     },
     "node_modules/focus-trap": {
-      "version": "7.6.0",
-      "resolved": "https://registry.npmjs.org/focus-trap/-/focus-trap-7.6.0.tgz",
-      "integrity": "sha512-1td0l3pMkWJLFipobUcGaf+5DTY4PLDDrcqoSaKP8ediO/CoWCCYk/fT/Y2A4e6TNB+Sh6clRJCjOPPnKoNHnQ==",
-      "license": "MIT",
+      "version": "7.6.4",
+      "resolved": "https://registry.npmjs.org/focus-trap/-/focus-trap-7.6.4.tgz",
+      "integrity": "sha512-xx560wGBk7seZ6y933idtjJQc1l+ck+pI3sKvhKozdBV1dRZoKhkW5xoCaFv9tQiX5RH1xfSxjuNu6g+lmN/gw==",
       "dependencies": {
         "tabbable": "^6.2.0"
       }
@@ -12517,8 +12534,7 @@
     "node_modules/lodash": {
       "version": "4.17.21",
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
-      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
-      "dev": true
+      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
     },
     "node_modules/lodash.memoize": {
       "version": "4.1.2",
@@ -15137,12 +15153,12 @@
       }
     },
     "node_modules/react-dropzone": {
-      "version": "14.2.3",
-      "resolved": "https://registry.npmjs.org/react-dropzone/-/react-dropzone-14.2.3.tgz",
-      "integrity": "sha512-O3om8I+PkFKbxCukfIR3QAGftYXDZfOE2N1mr/7qebQJHs7U+/RSL/9xomJNpRg9kM5h9soQSdf0Gc7OHF5Fug==",
+      "version": "14.3.8",
+      "resolved": "https://registry.npmjs.org/react-dropzone/-/react-dropzone-14.3.8.tgz",
+      "integrity": "sha512-sBgODnq+lcA4P296DY4wacOZz3JFpD99fp+hb//iBO2HHnyeZU3FwWyXJ6salNpqQdsZrgMrotuko/BdJMV8Ug==",
       "dependencies": {
-        "attr-accept": "^2.2.2",
-        "file-selector": "^0.6.0",
+        "attr-accept": "^2.2.4",
+        "file-selector": "^2.1.0",
         "prop-types": "^15.8.1"
       },
       "engines": {
@@ -17000,8 +17016,7 @@
     "node_modules/tabbable": {
       "version": "6.2.0",
       "resolved": "https://registry.npmjs.org/tabbable/-/tabbable-6.2.0.tgz",
-      "integrity": "sha512-Cat63mxsVJlzYvN51JmVXIgNoUokrIaT2zLclCXjRd8boZ0004U4KCs/sToJ75C6sdlByWxpYnb5Boif1VSFew==",
-      "license": "MIT"
+      "integrity": "sha512-Cat63mxsVJlzYvN51JmVXIgNoUokrIaT2zLclCXjRd8boZ0004U4KCs/sToJ75C6sdlByWxpYnb5Boif1VSFew=="
     },
     "node_modules/tapable": {
       "version": "1.1.3",
diff --git a/package.json b/package.json
index c74540f..cc46e55 100644
--- a/package.json
+++ b/package.json
@@ -72,6 +72,7 @@
     "@patternfly/react-core": "^6.0.0",
     "@patternfly/react-icons": "^6.0.0",
     "@patternfly/react-styles": "^6.0.0",
+    "@patternfly/react-table": "^6.3.1",
     "react": "^18",
     "react-dom": "^18",
     "sirv-cli": "^3.0.0"
diff --git a/src/app/AdditionalPackages/AdditionalPackages.tsx b/src/app/AdditionalPackages/AdditionalPackages.tsx
index 9de46d0..215eedc 100644
--- a/src/app/AdditionalPackages/AdditionalPackages.tsx
+++ b/src/app/AdditionalPackages/AdditionalPackages.tsx
@@ -8,19 +8,30 @@ import {
   SearchInput,
   Button,
   ButtonVariant,
-  Checkbox,
-  Pagination,
-  PaginationVariant,
   ToggleGroup,
   ToggleGroupItem,
-  DataList,
-  DataListItem,
-  DataListItemRow,
-  DataListItemCells,
-  DataListCell,
-  DataListToggle,
-  DataListContent,
+  Pagination,
+  PaginationVariant,
+  Nav,
+  NavList,
+  NavItem,
+  PageSidebar,
+  Page,
+  PageGroup,
+  Breadcrumb,
+  BreadcrumbItem,
+  Checkbox,
 } from '@patternfly/react-core';
+import {
+  Table,
+  Thead,
+  Tbody,
+  Tr,
+  Th,
+  Td,
+  ExpandableRowContent,
+} from '@patternfly/react-table';
+import { RepositoryIcon, PackageIcon } from '@patternfly/react-icons';
 
 // Mock data types based on the osbuild implementation
 interface Package {
@@ -76,14 +87,14 @@ const mockGroups: PackageGroup[] = [
 ];
 
 export const AdditionalPackages: React.FunctionComponent = () => {
-  // State management
   const [searchTerm, setSearchTerm] = React.useState('');
+  const [toggleSelected, setToggleSelected] = React.useState<'toggle-available' | 'toggle-selected'>('toggle-available');
   const [perPage, setPerPage] = React.useState(10);
   const [page, setPage] = React.useState(1);
   const [selectedPackages, setSelectedPackages] = React.useState<Set<string>>(new Set());
   const [selectedGroups, setSelectedGroups] = React.useState<Set<string>>(new Set());
   const [expandedGroups, setExpandedGroups] = React.useState<Set<string>>(new Set());
-  const [toggleSelected, setToggleSelected] = React.useState<'toggle-available' | 'toggle-selected'>('toggle-available');
+  const [activeStep, setActiveStep] = React.useState('custom-repositories');
 
   // Filtered data based on search
   const allFilteredPackages = React.useMemo(() => {
@@ -206,13 +217,164 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   const totalItems = filteredPackages.length + filteredGroups.length;
   const selectedCount = selectedPackages.size + selectedGroups.size;
 
-  return (
-    <PageSection variant={PageSectionVariants.default}>
+  const handleStepChange = (stepId: string) => {
+    setActiveStep(stepId);
+  };
+
+  const renderCustomRepositories = () => (
+    <div style={{ padding: '20px 0' }}>
+      <div style={{ marginBottom: '20px' }}>
+        <Title headingLevel="h1" size="xl">
+          Custom repositories
+        </Title>
+        <p style={{ fontSize: '1rem', color: '#666', margin: '10px 0 0 0' }}>
+          Select the linked custom repositories from which you can add packages to the image
+        </p>
+      </div>
+
+      {/* Toolbar with controls */}
+      <div style={{ 
+        margin: '20px 0', 
+        display: 'flex', 
+        gap: '16px', 
+        alignItems: 'center', 
+        flexWrap: 'wrap',
+        padding: '16px',
+        backgroundColor: '#f8f9fa',
+        border: '1px solid #d1d1d1',
+        borderRadius: '4px'
+      }}>
+        <div style={{ width: '300px' }}>
+          <SearchInput
+            placeholder="Filter repositories"
+            value={searchTerm}
+            onChange={handleSearch}
+            onClear={handleClear}
+            aria-label="Filter repositories"
+          />
+        </div>
+        
+        <Button variant={ButtonVariant.primary}>
+          Refresh
+        </Button>
+
+        <ToggleGroup aria-label="Filter repositories list">
+          <ToggleGroupItem
+            text="All"
+            aria-label="All repositories"
+            buttonId="toggle-repos-all"
+            isSelected={true}
+            onChange={() => {}}
+          />
+          <ToggleGroupItem
+            text="Selected"
+            aria-label="Selected repositories"
+            buttonId="toggle-repos-selected"
+            isSelected={false}
+            onChange={() => {}}
+          />
+        </ToggleGroup>
+      </div>
+
+      {/* Repositories Table */}
+      <Table aria-label="Custom repositories table" variant="compact">
+        <Thead>
+          <Tr>
+            <Th aria-label="Select repository"></Th>
+            <Th width={45}>Name</Th>
+            <Th width={15}>Architecture</Th>
+            <Th>Version</Th>
+            <Th width={10}>Packages</Th>
+            <Th>Status</Th>
+          </Tr>
+        </Thead>
+        <Tbody>
+          <Tr>
+            <Td>
+              <Checkbox
+                id="repo-1"
+                isChecked={false}
+                onChange={() => {}}
+                aria-label="Select repository"
+              />
+            </Td>
+            <Td>
+              <div>
+                <strong>EPEL Repository</strong>
+                <br />
+                <Button
+                  component="a"
+                  target="_blank"
+                  variant="link"
+                  isInline
+                  href="https://dl.fedoraproject.org/pub/epel/"
+                >
+                  https://dl.fedoraproject.org/pub/epel/
+                </Button>
+              </div>
+            </Td>
+            <Td>x86_64</Td>
+            <Td>8</Td>
+            <Td>12,847</Td>
+            <Td>
+              <span style={{ color: 'green' }}>Valid</span>
+            </Td>
+          </Tr>
+          <Tr>
+            <Td>
+              <Checkbox
+                id="repo-2"
+                isChecked={false}
+                onChange={() => {}}
+                aria-label="Select repository"
+              />
+            </Td>
+            <Td>
+              <div>
+                <strong>Custom RPM Repository</strong>
+                <br />
+                <Button
+                  component="a"
+                  target="_blank"
+                  variant="link"
+                  isInline
+                  href="https://example.com/custom-repo/"
+                >
+                  https://example.com/custom-repo/
+                </Button>
+              </div>
+            </Td>
+            <Td>x86_64</Td>
+            <Td>8</Td>
+            <Td>156</Td>
+            <Td>
+              <span style={{ color: 'green' }}>Valid</span>
+            </Td>
+          </Tr>
+        </Tbody>
+      </Table>
+
+      {/* Pagination */}
+      <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>
+        <Pagination
+          itemCount={2}
+          perPage={10}
+          page={1}
+          onSetPage={() => {}}
+          onPerPageSelect={() => {}}
+          variant={PaginationVariant.bottom}
+        />
+      </div>
+    </div>
+  );
+
+  const renderAdditionalPackages = () => (
+    <div style={{ padding: '20px 0' }}>
       <div style={{ marginBottom: '20px' }}>
-        <h1 style={{ fontSize: '2rem', margin: '0 0 10px 0' }}>
+        <Title headingLevel="h1" size="xl">
           Additional packages
-        </h1>
-        <p style={{ fontSize: '1rem', color: '#666', margin: 0 }}>
+        </Title>
+        <p style={{ fontSize: '1rem', color: '#666', margin: '10px 0 0 0' }}>
           Blueprints created with Images include all required packages.
         </p>
       </div>
@@ -223,14 +385,16 @@ export const AdditionalPackages: React.FunctionComponent = () => {
       </Alert>
 
       {/* Search and Controls */}
-      <div style={{ margin: '20px 0', display: 'flex', gap: '20px', alignItems: 'center', flexWrap: 'wrap' }}>
-        <SearchInput
-          placeholder="Search packages"
-          value={searchTerm}
-          onChange={handleSearch}
-          onClear={handleClear}
-          aria-label="Search packages"
-        />
+      <div style={{ margin: '20px 0', display: 'flex', gap: '16px', alignItems: 'center', flexWrap: 'wrap' }}>
+        <div style={{ width: '300px' }}>
+          <SearchInput
+            placeholder="Search packages"
+            value={searchTerm}
+            onChange={handleSearch}
+            onClear={handleClear}
+            aria-label="Search packages"
+          />
+        </div>
         
         <ToggleGroup>
           <ToggleGroupItem
@@ -261,75 +425,79 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         </div>
       </div>
 
-      {/* Packages Display using DataList */}
-      <DataList aria-label="Packages list" isCompact>
-        {/* Package Groups */}
-        {paginatedGroups.map((group) => (
-          <DataListItem key={group.name} isExpanded={expandedGroups.has(group.name)}>
-            <DataListItemRow>
-              <DataListToggle
-                onClick={() => handleGroupExpand(group.name)}
-                isExpanded={expandedGroups.has(group.name)}
-                id={`toggle-${group.name}`}
-                aria-controls={`expand-${group.name}`}
-              />
-              <DataListItemCells
-                dataListCells={[
-                  <DataListCell key="checkbox" width={1}>
-                    <Checkbox
-                      id={`group-${group.name}`}
-                      isChecked={selectedGroups.has(group.name)}
-                      onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handleGroupSelect(event, checked)}
-                      aria-label={`Select group ${group.name}`}
-                      data-group-name={group.name}
-                    />
-                  </DataListCell>,
-                  <DataListCell key="name" width={3}>
-                    <span style={{ fontWeight: 'bold', color: '#0066cc' }}>@{group.name}</span>
-                  </DataListCell>,
-                  <DataListCell key="stream" width={2}>N/A</DataListCell>,
-                  <DataListCell key="date" width={2}>N/A</DataListCell>
-                ]}
-              />
-            </DataListItemRow>
-            <DataListContent
-              aria-label={`${group.name} description`}
-              id={`expand-${group.name}`}
-              isHidden={!expandedGroups.has(group.name)}
-            >
-              <div style={{ padding: '16px', backgroundColor: '#f8f9fa' }}>
-                <strong>Description:</strong> {group.description}
-              </div>
-            </DataListContent>
-          </DataListItem>
-        ))}
-
-        {/* Individual Packages */}
-        {paginatedPackages.map((pkg) => (
-          <DataListItem key={pkg.name}>
-            <DataListItemRow>
-              <DataListItemCells
-                dataListCells={[
-                  <DataListCell key="checkbox" width={1}>
-                    <Checkbox
-                      id={`package-${pkg.name}`}
-                      isChecked={selectedPackages.has(pkg.name)}
-                      onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handlePackageSelect(event, checked)}
-                      aria-label={`Select package ${pkg.name}`}
-                      data-package-name={pkg.name}
-                    />
-                  </DataListCell>,
-                  <DataListCell key="name" width={3}>
-                    <span style={{ fontWeight: 'bold' }}>{pkg.name}</span>
-                  </DataListCell>,
-                  <DataListCell key="stream" width={2}>{pkg.stream || 'N/A'}</DataListCell>,
-                  <DataListCell key="date" width={2}>{pkg.end_date || 'N/A'}</DataListCell>
-                ]}
-              />
-            </DataListItemRow>
-          </DataListItem>
-        ))}
-      </DataList>
+      {/* Packages Display using Table */}
+      <Table aria-label="Packages table" variant="compact">
+        <Thead>
+          <Tr>
+            <Th aria-label="Expand toggle"></Th>
+            <Th aria-label="Select item"></Th>
+            <Th>Name</Th>
+            <Th>Application stream</Th>
+            <Th>Retirement date</Th>
+          </Tr>
+        </Thead>
+        <Tbody>
+          {/* Package Groups */}
+          {paginatedGroups.map((group) => (
+            <React.Fragment key={group.name}>
+              <Tr>
+                <Td
+                  expand={{
+                    rowIndex: 0,
+                    isExpanded: expandedGroups.has(group.name),
+                    onToggle: () => handleGroupExpand(group.name),
+                    expandId: `${group.name}-expandable`,
+                  }}
+                />
+                <Td>
+                  <Checkbox
+                    id={`group-${group.name}`}
+                    isChecked={selectedGroups.has(group.name)}
+                    onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handleGroupSelect(event, checked)}
+                    aria-label={`Select group ${group.name}`}
+                    data-group-name={group.name}
+                  />
+                </Td>
+                <Td>
+                  <span style={{ fontWeight: 'bold', color: '#0066cc' }}>@{group.name}</span>
+                </Td>
+                <Td>N/A</Td>
+                <Td>N/A</Td>
+              </Tr>
+              <Tr isExpanded={expandedGroups.has(group.name)}>
+                <Td colSpan={5}>
+                  <ExpandableRowContent>
+                    <div style={{ padding: '16px', backgroundColor: '#f8f9fa' }}>
+                      <strong>Description:</strong> {group.description}
+                    </div>
+                  </ExpandableRowContent>
+                </Td>
+              </Tr>
+            </React.Fragment>
+          ))}
+
+          {/* Individual Packages */}
+          {paginatedPackages.map((pkg) => (
+            <Tr key={pkg.name}>
+              <Td></Td>
+              <Td>
+                <Checkbox
+                  id={`package-${pkg.name}`}
+                  isChecked={selectedPackages.has(pkg.name)}
+                  onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handlePackageSelect(event, checked)}
+                  aria-label={`Select package ${pkg.name}`}
+                  data-package-name={pkg.name}
+                />
+              </Td>
+              <Td>
+                <span style={{ fontWeight: 'bold' }}>{pkg.name}</span>
+              </Td>
+              <Td>{pkg.stream || 'N/A'}</Td>
+              <Td>{pkg.end_date || 'N/A'}</Td>
+            </Tr>
+          ))}
+        </Tbody>
+      </Table>
 
       {/* Bottom Pagination */}
       <Pagination
@@ -340,6 +508,91 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         onPerPageSelect={onPerPageSelect}
         variant={PaginationVariant.bottom}
       />
-    </PageSection>
+    </div>
+  );
+
+  return (
+    <div style={{ display: 'flex', minHeight: '100vh' }}>
+      {/* Sidebar Navigation */}
+      <div style={{ 
+        width: '250px', 
+        backgroundColor: '#f8f9fa', 
+        borderRight: '1px solid #d1d1d1',
+        padding: '20px',
+        overflowY: 'auto',
+        flexShrink: 0
+      }}>
+        <h3 style={{ marginBottom: '20px', color: '#333' }}>Image Builder Steps</h3>
+        <Nav onSelect={(event, itemId) => handleStepChange(itemId as string)}>
+          <NavList>
+            <NavItem 
+              itemId="custom-repositories" 
+              isActive={activeStep === 'custom-repositories'}
+              icon={<RepositoryIcon />}
+            >
+              Step 1: Custom Repositories
+            </NavItem>
+            <NavItem 
+              itemId="additional-packages" 
+              isActive={activeStep === 'additional-packages'}
+              icon={<PackageIcon />}
+            >
+              Step 2: Additional Packages
+            </NavItem>
+          </NavList>
+        </Nav>
+      </div>
+
+      {/* Main Content Area */}
+      <div style={{ flex: 1, padding: '20px' }}>
+        {/* Breadcrumb */}
+        <div style={{ marginBottom: '20px' }}>
+          <Breadcrumb>
+            <BreadcrumbItem>Image Builder</BreadcrumbItem>
+            <BreadcrumbItem isActive>
+              {activeStep === 'custom-repositories' ? 'Custom Repositories' : 'Additional Packages'}
+            </BreadcrumbItem>
+          </Breadcrumb>
+        </div>
+
+        {/* Custom Repositories Step */}
+        <div style={{ marginBottom: '40px' }}>
+          <div style={{ 
+            display: 'flex', 
+            alignItems: 'center', 
+            marginBottom: '20px',
+            padding: '16px',
+            backgroundColor: activeStep === 'custom-repositories' ? '#f0f0f0' : '#f8f9fa',
+            border: activeStep === 'custom-repositories' ? '2px solid #0066cc' : '1px solid #d1d1d1',
+            borderRadius: '4px'
+          }}>
+            <RepositoryIcon style={{ marginRight: '12px', color: '#0066cc' }} />
+            <Title headingLevel="h2" size="lg">
+              Step 1: Custom Repositories
+            </Title>
+          </div>
+          {renderCustomRepositories()}
+        </div>
+
+        {/* Additional Packages Step */}
+        <div>
+          <div style={{ 
+            display: 'flex', 
+            alignItems: 'center', 
+            marginBottom: '20px',
+            padding: '16px',
+            backgroundColor: activeStep === 'additional-packages' ? '#f0f0f0' : '#f8f9fa',
+            border: activeStep === 'additional-packages' ? '2px solid #0066cc' : '1px solid #d1d1d1',
+            borderRadius: '4px'
+          }}>
+            <PackageIcon style={{ marginRight: '12px', color: '#0066cc' }} />
+            <Title headingLevel="h2" size="lg">
+              Step 2: Additional Packages
+            </Title>
+          </div>
+          {renderAdditionalPackages()}
+        </div>
+      </div>
+    </div>
   );
 };
-- 
2.32.0 (Apple Git-132)


From 087ca4ee306148c5ce4836729959850afe79de59 Mon Sep 17 00:00:00 2001
From: Kelsea Mann <kelseamann@kelseas-mbp.lan>
Date: Mon, 25 Aug 2025 17:27:53 -0600
Subject: [PATCH 3/6] Fix navigation state management - extract correct itemId
 from Nav component object

- Fixed activeStep state being set to [object Object] instead of string
- Added proper extraction of itemId.itemId from navigation object
- Added debugging logs to track navigation state changes
- Both Custom Repositories and Additional Packages steps now display correctly
- Navigation highlighting and content visibility working as expected
---
 .../AdditionalPackages/AdditionalPackages.tsx | 374 +++++++++++-------
 1 file changed, 234 insertions(+), 140 deletions(-)

diff --git a/src/app/AdditionalPackages/AdditionalPackages.tsx b/src/app/AdditionalPackages/AdditionalPackages.tsx
index 215eedc..b548e1a 100644
--- a/src/app/AdditionalPackages/AdditionalPackages.tsx
+++ b/src/app/AdditionalPackages/AdditionalPackages.tsx
@@ -218,9 +218,16 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   const selectedCount = selectedPackages.size + selectedGroups.size;
 
   const handleStepChange = (stepId: string) => {
+    console.log('Step change requested:', stepId);
     setActiveStep(stepId);
+    console.log('Active step set to:', stepId);
   };
 
+  // Debug logging
+  console.log('Current activeStep:', activeStep);
+  console.log('Should show custom repos:', activeStep === 'custom-repositories');
+  console.log('Should show additional packages:', activeStep === 'additional-packages');
+
   const renderCustomRepositories = () => (
     <div style={{ padding: '20px 0' }}>
       <div style={{ marginBottom: '20px' }}>
@@ -368,148 +375,168 @@ export const AdditionalPackages: React.FunctionComponent = () => {
     </div>
   );
 
-  const renderAdditionalPackages = () => (
-    <div style={{ padding: '20px 0' }}>
-      <div style={{ marginBottom: '20px' }}>
-        <Title headingLevel="h1" size="xl">
-          Additional packages
-        </Title>
-        <p style={{ fontSize: '1rem', color: '#666', margin: '10px 0 0 0' }}>
-          Blueprints created with Images include all required packages.
-        </p>
-      </div>
-      
-      <Alert variant={AlertVariant.info} isInline title="Search for package groups">
-        Search for package groups by starting your search with the '@' character. 
-        A single '@' as search input lists all available package groups.
-      </Alert>
-
-      {/* Search and Controls */}
-      <div style={{ margin: '20px 0', display: 'flex', gap: '16px', alignItems: 'center', flexWrap: 'wrap' }}>
-        <div style={{ width: '300px' }}>
-          <SearchInput
-            placeholder="Search packages"
-            value={searchTerm}
-            onChange={handleSearch}
-            onClear={handleClear}
-            aria-label="Search packages"
-          />
+  const renderAdditionalPackages = () => {
+    console.log('renderAdditionalPackages called');
+    console.log('paginatedGroups:', paginatedGroups);
+    console.log('paginatedPackages:', paginatedPackages);
+    console.log('filteredGroups:', filteredGroups);
+    console.log('filteredPackages:', filteredPackages);
+    
+    return (
+      <div style={{ padding: '20px 0' }}>
+        {/* Debug info for content */}
+        <div style={{ 
+          backgroundColor: '#e8f5e8', 
+          border: '1px solid #4caf50', 
+          padding: '10px', 
+          marginBottom: '10px',
+          borderRadius: '4px'
+        }}>
+          <strong>Content Debug:</strong> 
+          Groups: {paginatedGroups.length}, Packages: {paginatedPackages.length}
         </div>
         
-        <ToggleGroup>
-          <ToggleGroupItem
-            text={`Available${totalItems ? ` (${totalItems})` : ''}`}
-            buttonId="toggle-available"
-            isSelected={toggleSelected === 'toggle-available'}
-            onChange={handleToggleChange}
-          />
-          <ToggleGroupItem
-            text={`Selected${selectedCount ? ` (${selectedCount})` : ''}`}
-            buttonId="toggle-selected"
-            isSelected={toggleSelected === 'toggle-selected'}
-            onChange={handleToggleChange}
-          />
-        </ToggleGroup>
-
-        <div style={{ marginLeft: 'auto' }}>
-          <span>Items per page: </span>
-          <select 
-            value={perPage} 
-            onChange={(e) => setPerPage(Number(e.target.value))}
-            style={{ padding: '5px', marginLeft: '5px' }}
-          >
-            <option value={5}>5</option>
-            <option value={10}>10</option>
-            <option value={20}>20</option>
-          </select>
+        <div style={{ marginBottom: '20px' }}>
+          <Title headingLevel="h1" size="xl">
+            Additional packages
+          </Title>
+          <p style={{ fontSize: '1rem', color: '#666', margin: '10px 0 0 0' }}>
+            Blueprints created with Images include all required packages.
+          </p>
+        </div>
+      
+        <Alert variant={AlertVariant.info} isInline title="Search for package groups">
+          Search for package groups by starting your search with the '@' character. 
+          A single '@' as search input lists all available package groups.
+        </Alert>
+
+        {/* Search and Controls */}
+        <div style={{ margin: '20px 0', display: 'flex', gap: '16px', alignItems: 'center', flexWrap: 'wrap' }}>
+          <div style={{ width: '300px' }}>
+            <SearchInput
+              placeholder="Search packages"
+              value={searchTerm}
+              onChange={handleSearch}
+              onClear={handleClear}
+              aria-label="Search packages"
+            />
+          </div>
+          
+          <ToggleGroup>
+            <ToggleGroupItem
+              text={`Available${totalItems ? ` (${totalItems})` : ''}`}
+              buttonId="toggle-available"
+              isSelected={toggleSelected === 'toggle-available'}
+              onChange={handleToggleChange}
+            />
+            <ToggleGroupItem
+              text={`Selected${selectedCount ? ` (${selectedCount})` : ''}`}
+              buttonId="toggle-selected"
+              isSelected={toggleSelected === 'toggle-selected'}
+              onChange={handleToggleChange}
+            />
+          </ToggleGroup>
+
+          <div style={{ marginLeft: 'auto' }}>
+            <span>Items per page: </span>
+            <select 
+              value={perPage} 
+              onChange={(e) => setPerPage(Number(e.target.value))}
+              style={{ padding: '5px', marginLeft: '5px' }}
+            >
+              <option value={5}>5</option>
+              <option value={10}>10</option>
+              <option value={20}>20</option>
+            </select>
+          </div>
         </div>
-      </div>
 
-      {/* Packages Display using Table */}
-      <Table aria-label="Packages table" variant="compact">
-        <Thead>
-          <Tr>
-            <Th aria-label="Expand toggle"></Th>
-            <Th aria-label="Select item"></Th>
-            <Th>Name</Th>
-            <Th>Application stream</Th>
-            <Th>Retirement date</Th>
-          </Tr>
-        </Thead>
-        <Tbody>
-          {/* Package Groups */}
-          {paginatedGroups.map((group) => (
-            <React.Fragment key={group.name}>
-              <Tr>
-                <Td
-                  expand={{
-                    rowIndex: 0,
-                    isExpanded: expandedGroups.has(group.name),
-                    onToggle: () => handleGroupExpand(group.name),
-                    expandId: `${group.name}-expandable`,
-                  }}
-                />
+        {/* Packages Display using Table */}
+        <Table aria-label="Packages table" variant="compact">
+          <Thead>
+            <Tr>
+              <Th aria-label="Expand toggle"></Th>
+              <Th aria-label="Select item"></Th>
+              <Th>Name</Th>
+              <Th>Application stream</Th>
+              <Th>Retirement date</Th>
+            </Tr>
+          </Thead>
+          <Tbody>
+            {/* Package Groups */}
+            {paginatedGroups.map((group) => (
+              <React.Fragment key={group.name}>
+                <Tr>
+                  <Td
+                    expand={{
+                      rowIndex: 0,
+                      isExpanded: expandedGroups.has(group.name),
+                      onToggle: () => handleGroupExpand(group.name),
+                      expandId: `${group.name}-expandable`,
+                    }}
+                  />
+                  <Td>
+                    <Checkbox
+                      id={`group-${group.name}`}
+                      isChecked={selectedGroups.has(group.name)}
+                      onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handleGroupSelect(event, checked)}
+                      aria-label={`Select group ${group.name}`}
+                      data-group-name={group.name}
+                    />
+                  </Td>
+                  <Td>
+                    <span style={{ fontWeight: 'bold', color: '#0066cc' }}>@{group.name}</span>
+                  </Td>
+                  <Td>N/A</Td>
+                  <Td>N/A</Td>
+                </Tr>
+                <Tr isExpanded={expandedGroups.has(group.name)}>
+                  <Td colSpan={5}>
+                    <ExpandableRowContent>
+                      <div style={{ padding: '16px', backgroundColor: '#f8f9fa' }}>
+                        <strong>Description:</strong> {group.description}
+                      </div>
+                    </ExpandableRowContent>
+                  </Td>
+                </Tr>
+              </React.Fragment>
+            ))}
+
+            {/* Individual Packages */}
+            {paginatedPackages.map((pkg) => (
+              <Tr key={pkg.name}>
+                <Td></Td>
                 <Td>
                   <Checkbox
-                    id={`group-${group.name}`}
-                    isChecked={selectedGroups.has(group.name)}
-                    onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handleGroupSelect(event, checked)}
-                    aria-label={`Select group ${group.name}`}
-                    data-group-name={group.name}
+                    id={`package-${pkg.name}`}
+                    isChecked={selectedPackages.has(pkg.name)}
+                    onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handlePackageSelect(event, checked)}
+                    aria-label={`Select package ${pkg.name}`}
+                    data-package-name={pkg.name}
                   />
                 </Td>
                 <Td>
-                  <span style={{ fontWeight: 'bold', color: '#0066cc' }}>@{group.name}</span>
+                  <span style={{ fontWeight: 'bold' }}>{pkg.name}</span>
                 </Td>
-                <Td>N/A</Td>
-                <Td>N/A</Td>
+                <Td>{pkg.stream || 'N/A'}</Td>
+                <Td>{pkg.end_date || 'N/A'}</Td>
               </Tr>
-              <Tr isExpanded={expandedGroups.has(group.name)}>
-                <Td colSpan={5}>
-                  <ExpandableRowContent>
-                    <div style={{ padding: '16px', backgroundColor: '#f8f9fa' }}>
-                      <strong>Description:</strong> {group.description}
-                    </div>
-                  </ExpandableRowContent>
-                </Td>
-              </Tr>
-            </React.Fragment>
-          ))}
-
-          {/* Individual Packages */}
-          {paginatedPackages.map((pkg) => (
-            <Tr key={pkg.name}>
-              <Td></Td>
-              <Td>
-                <Checkbox
-                  id={`package-${pkg.name}`}
-                  isChecked={selectedPackages.has(pkg.name)}
-                  onChange={(event: React.FormEvent<HTMLInputElement>, checked: boolean) => handlePackageSelect(event, checked)}
-                  aria-label={`Select package ${pkg.name}`}
-                  data-package-name={pkg.name}
-                />
-              </Td>
-              <Td>
-                <span style={{ fontWeight: 'bold' }}>{pkg.name}</span>
-              </Td>
-              <Td>{pkg.stream || 'N/A'}</Td>
-              <Td>{pkg.end_date || 'N/A'}</Td>
-            </Tr>
-          ))}
-        </Tbody>
-      </Table>
+            ))}
+          </Tbody>
+        </Table>
 
-      {/* Bottom Pagination */}
-      <Pagination
-        itemCount={totalItems}
-        perPage={perPage}
-        page={page}
-        onSetPage={onSetPage}
-        onPerPageSelect={onPerPageSelect}
-        variant={PaginationVariant.bottom}
-      />
-    </div>
-  );
+        {/* Bottom Pagination */}
+        <Pagination
+          itemCount={totalItems}
+          perPage={perPage}
+          page={page}
+          onSetPage={onSetPage}
+          onPerPageSelect={onPerPageSelect}
+          variant={PaginationVariant.bottom}
+        />
+      </div>
+    );
+  };
 
   return (
     <div style={{ display: 'flex', minHeight: '100vh' }}>
@@ -523,21 +550,72 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         flexShrink: 0
       }}>
         <h3 style={{ marginBottom: '20px', color: '#333' }}>Image Builder Steps</h3>
-        <Nav onSelect={(event, itemId) => handleStepChange(itemId as string)}>
+        <Nav onSelect={(event, itemId) => {
+          console.log('Nav onSelect - itemId:', itemId, 'type:', typeof itemId);
+          const stepId = typeof itemId === 'string' ? itemId : itemId.itemId;
+          console.log('Extracted stepId:', stepId);
+          handleStepChange(stepId);
+        }}>
           <NavList>
             <NavItem 
               itemId="custom-repositories" 
               isActive={activeStep === 'custom-repositories'}
               icon={<RepositoryIcon />}
+              style={{
+                backgroundColor: activeStep === 'custom-repositories' ? '#e7f1ff' : 'transparent',
+                border: activeStep === 'custom-repositories' ? '2px solid #0066cc' : '2px solid transparent',
+                borderRadius: '6px',
+                marginBottom: '8px',
+                padding: '12px',
+                transition: 'all 0.2s ease',
+                cursor: 'pointer'
+              }}
             >
-              Step 1: Custom Repositories
+              <div style={{ 
+                display: 'flex', 
+                alignItems: 'center',
+                color: activeStep === 'custom-repositories' ? '#0066cc' : '#333'
+              }}>
+                <RepositoryIcon style={{ 
+                  marginRight: '12px', 
+                  color: activeStep === 'custom-repositories' ? '#0066cc' : '#666'
+                }} />
+                <span style={{ 
+                  fontWeight: activeStep === 'custom-repositories' ? '600' : '400'
+                }}>
+                  Step 1: Custom Repositories
+                </span>
+              </div>
             </NavItem>
             <NavItem 
               itemId="additional-packages" 
               isActive={activeStep === 'additional-packages'}
               icon={<PackageIcon />}
+              style={{
+                backgroundColor: activeStep === 'additional-packages' ? '#e7f1ff' : 'transparent',
+                border: activeStep === 'additional-packages' ? '2px solid #0066cc' : '2px solid transparent',
+                borderRadius: '6px',
+                marginBottom: '8px',
+                padding: '12px',
+                transition: 'all 0.2s ease',
+                cursor: 'pointer'
+              }}
             >
-              Step 2: Additional Packages
+              <div style={{ 
+                display: 'flex', 
+                alignItems: 'center',
+                color: activeStep === 'additional-packages' ? '#0066cc' : '#333'
+              }}>
+                <PackageIcon style={{ 
+                  marginRight: '12px', 
+                  color: activeStep === 'additional-packages' ? '#0066cc' : '#666'
+                }} />
+                <span style={{ 
+                  fontWeight: activeStep === 'additional-packages' ? '600' : '400'
+                }}>
+                  Step 2: Additional Packages
+                </span>
+              </div>
             </NavItem>
           </NavList>
         </Nav>
@@ -556,10 +634,13 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         </div>
 
         {/* Custom Repositories Step */}
-        <div style={{ marginBottom: '40px' }}>
-          <div style={{ 
-            display: 'flex', 
-            alignItems: 'center', 
+        <div style={{ 
+          marginBottom: '40px',
+          display: activeStep === 'custom-repositories' ? 'block' : 'none'
+        }}>
+          <div style={{
+            display: 'flex',
+            alignItems: 'center',
             marginBottom: '20px',
             padding: '16px',
             backgroundColor: activeStep === 'custom-repositories' ? '#f0f0f0' : '#f8f9fa',
@@ -575,10 +656,23 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         </div>
 
         {/* Additional Packages Step */}
-        <div>
+        <div style={{
+          display: activeStep === 'additional-packages' ? 'block' : 'none'
+        }}>
+          {/* Debug info */}
           <div style={{ 
-            display: 'flex', 
-            alignItems: 'center', 
+            backgroundColor: '#fff3cd', 
+            border: '1px solid #ffeaa7', 
+            padding: '10px', 
+            marginBottom: '10px',
+            borderRadius: '4px'
+          }}>
+            <strong>Debug Info:</strong> activeStep = "{activeStep}", should show: {activeStep === 'additional-packages' ? 'YES' : 'NO'}
+          </div>
+          
+          <div style={{
+            display: 'flex',
+            alignItems: 'center',
             marginBottom: '20px',
             padding: '16px',
             backgroundColor: activeStep === 'additional-packages' ? '#f0f0f0' : '#f8f9fa',
-- 
2.32.0 (Apple Git-132)


From fa9a17dfbd0ed0fc911a096e284c29ee33d6982e Mon Sep 17 00:00:00 2001
From: Kelsea Mann <kelseamann@kelseas-mbp.lan>
Date: Mon, 25 Aug 2025 17:38:53 -0600
Subject: [PATCH 4/6] Fix pagination alignment - make Custom Repositories
 pagination right-aligned to match Additional Packages step

- Changed Custom Repositories pagination from center to flex-end alignment
- Both steps now have consistent right-aligned pagination
- Maintains professional appearance and visual consistency
- UI now follows common enterprise application patterns
---
 .../AdditionalPackages/AdditionalPackages.tsx | 72 +------------------
 1 file changed, 2 insertions(+), 70 deletions(-)

diff --git a/src/app/AdditionalPackages/AdditionalPackages.tsx b/src/app/AdditionalPackages/AdditionalPackages.tsx
index b548e1a..9da9733 100644
--- a/src/app/AdditionalPackages/AdditionalPackages.tsx
+++ b/src/app/AdditionalPackages/AdditionalPackages.tsx
@@ -218,16 +218,9 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   const selectedCount = selectedPackages.size + selectedGroups.size;
 
   const handleStepChange = (stepId: string) => {
-    console.log('Step change requested:', stepId);
     setActiveStep(stepId);
-    console.log('Active step set to:', stepId);
   };
 
-  // Debug logging
-  console.log('Current activeStep:', activeStep);
-  console.log('Should show custom repos:', activeStep === 'custom-repositories');
-  console.log('Should show additional packages:', activeStep === 'additional-packages');
-
   const renderCustomRepositories = () => (
     <div style={{ padding: '20px 0' }}>
       <div style={{ marginBottom: '20px' }}>
@@ -246,10 +239,7 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         gap: '16px', 
         alignItems: 'center', 
         flexWrap: 'wrap',
-        padding: '16px',
-        backgroundColor: '#f8f9fa',
-        border: '1px solid #d1d1d1',
-        borderRadius: '4px'
+        padding: '16px'
       }}>
         <div style={{ width: '300px' }}>
           <SearchInput
@@ -362,7 +352,7 @@ export const AdditionalPackages: React.FunctionComponent = () => {
       </Table>
 
       {/* Pagination */}
-      <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>
+      <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'flex-end' }}>
         <Pagination
           itemCount={2}
           perPage={10}
@@ -376,25 +366,8 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   );
 
   const renderAdditionalPackages = () => {
-    console.log('renderAdditionalPackages called');
-    console.log('paginatedGroups:', paginatedGroups);
-    console.log('paginatedPackages:', paginatedPackages);
-    console.log('filteredGroups:', filteredGroups);
-    console.log('filteredPackages:', filteredPackages);
-    
     return (
       <div style={{ padding: '20px 0' }}>
-        {/* Debug info for content */}
-        <div style={{ 
-          backgroundColor: '#e8f5e8', 
-          border: '1px solid #4caf50', 
-          padding: '10px', 
-          marginBottom: '10px',
-          borderRadius: '4px'
-        }}>
-          <strong>Content Debug:</strong> 
-          Groups: {paginatedGroups.length}, Packages: {paginatedPackages.length}
-        </div>
         
         <div style={{ marginBottom: '20px' }}>
           <Title headingLevel="h1" size="xl">
@@ -551,9 +524,7 @@ export const AdditionalPackages: React.FunctionComponent = () => {
       }}>
         <h3 style={{ marginBottom: '20px', color: '#333' }}>Image Builder Steps</h3>
         <Nav onSelect={(event, itemId) => {
-          console.log('Nav onSelect - itemId:', itemId, 'type:', typeof itemId);
           const stepId = typeof itemId === 'string' ? itemId : itemId.itemId;
-          console.log('Extracted stepId:', stepId);
           handleStepChange(stepId);
         }}>
           <NavList>
@@ -638,20 +609,6 @@ export const AdditionalPackages: React.FunctionComponent = () => {
           marginBottom: '40px',
           display: activeStep === 'custom-repositories' ? 'block' : 'none'
         }}>
-          <div style={{
-            display: 'flex',
-            alignItems: 'center',
-            marginBottom: '20px',
-            padding: '16px',
-            backgroundColor: activeStep === 'custom-repositories' ? '#f0f0f0' : '#f8f9fa',
-            border: activeStep === 'custom-repositories' ? '2px solid #0066cc' : '1px solid #d1d1d1',
-            borderRadius: '4px'
-          }}>
-            <RepositoryIcon style={{ marginRight: '12px', color: '#0066cc' }} />
-            <Title headingLevel="h2" size="lg">
-              Step 1: Custom Repositories
-            </Title>
-          </div>
           {renderCustomRepositories()}
         </div>
 
@@ -659,31 +616,6 @@ export const AdditionalPackages: React.FunctionComponent = () => {
         <div style={{
           display: activeStep === 'additional-packages' ? 'block' : 'none'
         }}>
-          {/* Debug info */}
-          <div style={{ 
-            backgroundColor: '#fff3cd', 
-            border: '1px solid #ffeaa7', 
-            padding: '10px', 
-            marginBottom: '10px',
-            borderRadius: '4px'
-          }}>
-            <strong>Debug Info:</strong> activeStep = "{activeStep}", should show: {activeStep === 'additional-packages' ? 'YES' : 'NO'}
-          </div>
-          
-          <div style={{
-            display: 'flex',
-            alignItems: 'center',
-            marginBottom: '20px',
-            padding: '16px',
-            backgroundColor: activeStep === 'additional-packages' ? '#f0f0f0' : '#f8f9fa',
-            border: activeStep === 'additional-packages' ? '2px solid #0066cc' : '1px solid #d1d1d1',
-            borderRadius: '4px'
-          }}>
-            <PackageIcon style={{ marginRight: '12px', color: '#0066cc' }} />
-            <Title headingLevel="h2" size="lg">
-              Step 2: Additional Packages
-            </Title>
-          </div>
           {renderAdditionalPackages()}
         </div>
       </div>
-- 
2.32.0 (Apple Git-132)


From 52d9f76b03a8776c28fbb2c45bce9083a5ec2af5 Mon Sep 17 00:00:00 2001
From: Kelsea Mann <kelseamann@kelseas-mbp.lan>
Date: Mon, 25 Aug 2025 17:44:46 -0600
Subject: [PATCH 5/6] Add horizontal tabs to Additional Packages step -
 implement Included repos and Other repos tabs

- Added PatternFly Tabs, Tab, and TabTitleText components
- Positioned horizontal tabs between search/controls and packages table
- Matches exact structure from osbuild/image-builder-frontend repository
- Tabs are functional and can be clicked between
- Maintains consistent visual design and spacing
- UI now closely resembles the original implementation
---
 .../AdditionalPackages/AdditionalPackages.tsx | 24 +++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/src/app/AdditionalPackages/AdditionalPackages.tsx b/src/app/AdditionalPackages/AdditionalPackages.tsx
index 9da9733..8e3bb9e 100644
--- a/src/app/AdditionalPackages/AdditionalPackages.tsx
+++ b/src/app/AdditionalPackages/AdditionalPackages.tsx
@@ -21,6 +21,9 @@ import {
   Breadcrumb,
   BreadcrumbItem,
   Checkbox,
+  Tabs,
+  Tab,
+  TabTitleText,
 } from '@patternfly/react-core';
 import {
   Table,
@@ -95,6 +98,7 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   const [selectedGroups, setSelectedGroups] = React.useState<Set<string>>(new Set());
   const [expandedGroups, setExpandedGroups] = React.useState<Set<string>>(new Set());
   const [activeStep, setActiveStep] = React.useState('custom-repositories');
+  const [activeTabKey, setActiveTabKey] = React.useState('included-repos');
 
   // Filtered data based on search
   const allFilteredPackages = React.useMemo(() => {
@@ -424,6 +428,26 @@ export const AdditionalPackages: React.FunctionComponent = () => {
           </div>
         </div>
 
+        {/* Horizontal Tabs */}
+        <div style={{ marginTop: '20px' }}>
+          <Tabs
+            activeKey={activeTabKey}
+            onSelect={(_event, tabIndex) => setActiveTabKey(tabIndex.toString())}
+            aria-label="Repositories tabs on packages step"
+          >
+            <Tab
+              eventKey="included-repos"
+              title={<TabTitleText>Included repos</TabTitleText>}
+              aria-label="Included repositories"
+            />
+            <Tab
+              eventKey="other-repos"
+              title={<TabTitleText>Other repos</TabTitleText>}
+              aria-label="Other repositories"
+            />
+          </Tabs>
+        </div>
+
         {/* Packages Display using Table */}
         <Table aria-label="Packages table" variant="compact">
           <Thead>
-- 
2.32.0 (Apple Git-132)


From 577b02a6ef5f3d7422280168e36ae8b676943129 Mon Sep 17 00:00:00 2001
From: Kelsea Mann <kelseamann@kelseas-mbp.lan>
Date: Mon, 25 Aug 2025 18:57:55 -0600
Subject: [PATCH 6/6] Complete image builder UI with commitment behavior for
 toggles

- Added top control panel with feature toggle switches
- Implemented commitment behavior for both repositories and packages toggles
- Selected items disappear from 'Available'/'All' lists after viewing 'Selected' list
- Fixed parentheses display in toggle button counts
- Both toggles now work identically with consistent behavior
- Clean, professional interface without PatternFly default header
---
 .../AdditionalPackages/AdditionalPackages.tsx | 565 ++++++++++++------
 1 file changed, 393 insertions(+), 172 deletions(-)

diff --git a/src/app/AdditionalPackages/AdditionalPackages.tsx b/src/app/AdditionalPackages/AdditionalPackages.tsx
index 8e3bb9e..90f20ef 100644
--- a/src/app/AdditionalPackages/AdditionalPackages.tsx
+++ b/src/app/AdditionalPackages/AdditionalPackages.tsx
@@ -89,6 +89,12 @@ const mockGroups: PackageGroup[] = [
   }
 ];
 
+// Mock repositories data
+const mockRepositories = [
+  { id: 'repo-1', name: 'EPEL Repository', url: 'https://dl.fedoraproject.org/pub/epel/', arch: 'x86_64', version: '8', packages: 12847, status: 'Valid' },
+  { id: 'repo-2', name: 'Custom RPM Repository', url: 'https://example.com/custom-repo/', arch: 'x86_64', version: '8', packages: 156, status: 'Valid' }
+];
+
 export const AdditionalPackages: React.FunctionComponent = () => {
   const [searchTerm, setSearchTerm] = React.useState('');
   const [toggleSelected, setToggleSelected] = React.useState<'toggle-available' | 'toggle-selected'>('toggle-available');
@@ -97,6 +103,10 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   const [selectedPackages, setSelectedPackages] = React.useState<Set<string>>(new Set());
   const [selectedGroups, setSelectedGroups] = React.useState<Set<string>>(new Set());
   const [expandedGroups, setExpandedGroups] = React.useState<Set<string>>(new Set());
+  const [selectedRepositories, setSelectedRepositories] = React.useState<Set<string>>(new Set());
+  const [reposToggleSelected, setReposToggleSelected] = React.useState<'toggle-repos-all' | 'toggle-repos-selected'>('toggle-repos-all');
+  const [hasViewedSelected, setHasViewedSelected] = React.useState(false);
+  const [hasViewedPackagesSelected, setHasViewedPackagesSelected] = React.useState(false);
   const [activeStep, setActiveStep] = React.useState('custom-repositories');
   const [activeTabKey, setActiveTabKey] = React.useState('included-repos');
 
@@ -121,13 +131,20 @@ export const AdditionalPackages: React.FunctionComponent = () => {
       pkg.summary.toLowerCase().includes(searchTerm.toLowerCase())
     );
     
-    // Apply toggle filter - show only selected packages when toggle is on "selected"
+    // Apply toggle filter
     if (toggleSelected === 'toggle-selected') {
+      // Show only selected packages
       filtered = filtered.filter(pkg => selectedPackages.has(pkg.name));
+    } else {
+      // "Available" toggle - hide selected packages only after user has viewed "Selected" list
+      if (hasViewedPackagesSelected) {
+        filtered = filtered.filter(pkg => !selectedPackages.has(pkg.name));
+      }
+      // If hasn't viewed "Selected" yet, show all packages
     }
     
     return filtered;
-  }, [searchTerm, toggleSelected, selectedPackages]);
+  }, [searchTerm, toggleSelected, selectedPackages, hasViewedPackagesSelected]);
 
   const filteredGroups = React.useMemo(() => {
     let filtered = mockGroups.filter(group =>
@@ -135,13 +152,20 @@ export const AdditionalPackages: React.FunctionComponent = () => {
       group.description.toLowerCase().includes(searchTerm.toLowerCase())
     );
     
-    // Apply toggle filter - show only selected groups when toggle is on "selected"
+    // Apply toggle filter
     if (toggleSelected === 'toggle-selected') {
+      // Show only selected groups
       filtered = filtered.filter(group => selectedGroups.has(group.name));
+    } else {
+      // "Available" toggle - hide selected groups only after user has viewed "Selected" list
+      if (hasViewedPackagesSelected) {
+        filtered = filtered.filter(group => !selectedGroups.has(group.name));
+      }
+      // If hasn't viewed "Selected" yet, show all groups
     }
     
     return filtered;
-  }, [searchTerm, toggleSelected, selectedGroups]);
+  }, [searchTerm, toggleSelected, selectedGroups, hasViewedPackagesSelected]);
 
   // Pagination
   const startIndex = (page - 1) * perPage;
@@ -161,10 +185,21 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   };
 
   const handleToggleChange = (event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>, selected: boolean) => {
-    const buttonId = event.currentTarget.getAttribute('data-id');
+    const buttonId = event.currentTarget.getAttribute('id');
+    console.log('Toggle change event:', { buttonId, selected, event: event.currentTarget });
     if (buttonId && (buttonId === 'toggle-available' || buttonId === 'toggle-selected')) {
+      console.log('Setting toggle to:', buttonId);
       setToggleSelected(buttonId as 'toggle-available' | 'toggle-selected');
       setPage(1); // Reset to first page when switching views
+      
+      // Track when user views the "Selected" list for packages
+      if (buttonId === 'toggle-selected') {
+        setHasViewedPackagesSelected(true);
+      }
+      
+      console.log('State update called for:', buttonId);
+    } else {
+      console.log('Button ID not found or invalid:', buttonId);
     }
   };
 
@@ -204,6 +239,35 @@ export const AdditionalPackages: React.FunctionComponent = () => {
     setExpandedGroups(newExpanded);
   };
 
+  const handleRepositorySelect = (event: React.FormEvent<HTMLInputElement>, checked: boolean) => {
+    const repoId = event.currentTarget.getAttribute('id');
+    if (repoId) {
+      const newSelected = new Set(selectedRepositories);
+      if (checked) {
+        newSelected.add(repoId);
+      } else {
+        newSelected.delete(repoId);
+      }
+      setSelectedRepositories(newSelected);
+    }
+  };
+
+  const handleReposToggleChange = (event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>, selected: boolean) => {
+    const buttonId = event.currentTarget.getAttribute('id');
+    console.log('Repos toggle change event:', { buttonId, selected, event: event.currentTarget });
+    if (buttonId && (buttonId === 'toggle-repos-all' || buttonId === 'toggle-repos-selected')) {
+      console.log('Setting repos toggle to:', buttonId);
+      setReposToggleSelected(buttonId as 'toggle-repos-all' | 'toggle-repos-selected');
+      
+      // Track when user views the "Selected" list
+      if (buttonId === 'toggle-repos-selected') {
+        setHasViewedSelected(true);
+      }
+    } else {
+      console.log('Repos button ID not found or invalid:', buttonId);
+    }
+  };
+
   // Use inline handlers to match PF v6 types
   const onSetPage = (
     _event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>,
@@ -218,8 +282,41 @@ export const AdditionalPackages: React.FunctionComponent = () => {
     setPage(1);
   };
 
+  const totalAvailableItems = mockPackages.length + mockGroups.length;
   const totalItems = filteredPackages.length + filteredGroups.length;
   const selectedCount = selectedPackages.size + selectedGroups.size;
+  
+  // Filtered repositories based on toggle state
+  const filteredRepositories = React.useMemo(() => {
+    let filtered = mockRepositories.filter(repo =>
+      repo.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
+      repo.url.toLowerCase().includes(searchTerm.toLowerCase())
+    );
+    
+    // Apply toggle filter
+    if (reposToggleSelected === 'toggle-repos-selected') {
+      // Show only selected repositories
+      filtered = filtered.filter(repo => selectedRepositories.has(repo.id));
+    } else {
+      // "All" toggle - hide selected repos only after user has viewed "Selected" list
+      if (hasViewedSelected) {
+        filtered = filtered.filter(repo => !selectedRepositories.has(repo.id));
+      }
+      // If hasn't viewed "Selected" yet, show all repos
+    }
+    
+    return filtered;
+  }, [searchTerm, reposToggleSelected, selectedRepositories, hasViewedSelected]);
+  
+  // Debug logging
+  console.log('Toggle state:', { toggleSelected, selectedCount, totalItems, totalAvailableItems });
+  console.log('Repos toggle state:', { reposToggleSelected, selectedRepositories: selectedRepositories.size });
+  console.log('Filtered data:', { 
+    packages: filteredPackages.length, 
+    groups: filteredGroups.length,
+    selectedPackages: Array.from(selectedPackages),
+    selectedGroups: Array.from(selectedGroups)
+  });
 
   const handleStepChange = (stepId: string) => {
     setActiveStep(stepId);
@@ -261,18 +358,18 @@ export const AdditionalPackages: React.FunctionComponent = () => {
 
         <ToggleGroup aria-label="Filter repositories list">
           <ToggleGroupItem
-            text="All"
+            text={`All${mockRepositories ? ` (${hasViewedSelected ? mockRepositories.length - selectedRepositories.size : mockRepositories.length})` : ''}`}
             aria-label="All repositories"
             buttonId="toggle-repos-all"
-            isSelected={true}
-            onChange={() => {}}
+            isSelected={reposToggleSelected === 'toggle-repos-all'}
+            onChange={handleReposToggleChange}
           />
           <ToggleGroupItem
-            text="Selected"
+            text={`Selected${selectedRepositories.size ? ` (${selectedRepositories.size})` : ''}`}
             aria-label="Selected repositories"
             buttonId="toggle-repos-selected"
-            isSelected={false}
-            onChange={() => {}}
+            isSelected={reposToggleSelected === 'toggle-repos-selected'}
+            onChange={handleReposToggleChange}
           />
         </ToggleGroup>
       </div>
@@ -289,70 +386,41 @@ export const AdditionalPackages: React.FunctionComponent = () => {
             <Th>Status</Th>
           </Tr>
         </Thead>
-        <Tbody>
-          <Tr>
-            <Td>
-              <Checkbox
-                id="repo-1"
-                isChecked={false}
-                onChange={() => {}}
-                aria-label="Select repository"
-              />
-            </Td>
-            <Td>
-              <div>
-                <strong>EPEL Repository</strong>
-                <br />
-                <Button
-                  component="a"
-                  target="_blank"
-                  variant="link"
-                  isInline
-                  href="https://dl.fedoraproject.org/pub/epel/"
-                >
-                  https://dl.fedoraproject.org/pub/epel/
-                </Button>
-              </div>
-            </Td>
-            <Td>x86_64</Td>
-            <Td>8</Td>
-            <Td>12,847</Td>
-            <Td>
-              <span style={{ color: 'green' }}>Valid</span>
-            </Td>
-          </Tr>
-          <Tr>
-            <Td>
-              <Checkbox
-                id="repo-2"
-                isChecked={false}
-                onChange={() => {}}
-                aria-label="Select repository"
-              />
-            </Td>
-            <Td>
-              <div>
-                <strong>Custom RPM Repository</strong>
-                <br />
-                <Button
-                  component="a"
-                  target="_blank"
-                  variant="link"
-                  isInline
-                  href="https://example.com/custom-repo/"
-                >
-                  https://example.com/custom-repo/
-                </Button>
-              </div>
-            </Td>
-            <Td>x86_64</Td>
-            <Td>8</Td>
-            <Td>156</Td>
-            <Td>
-              <span style={{ color: 'green' }}>Valid</span>
-            </Td>
-          </Tr>
-        </Tbody>
+                    <Tbody>
+              {filteredRepositories.map((repo) => (
+                <Tr key={repo.id}>
+                  <Td>
+                    <Checkbox
+                      id={repo.id}
+                      isChecked={selectedRepositories.has(repo.id)}
+                      onChange={handleRepositorySelect}
+                      aria-label="Select repository"
+                    />
+                  </Td>
+                  <Td>
+                    <div>
+                      <strong>{repo.name}</strong>
+                      <br />
+                      <Button
+                        component="a"
+                        target="_blank"
+                        variant="link"
+                        isInline
+                        href={repo.url}
+                      >
+                        {repo.url}
+                      </Button>
+                    </div>
+                  </Td>
+                  <Td>{repo.arch}</Td>
+                  <Td>{repo.version}</Td>
+                  <Td>{repo.packages.toLocaleString()}</Td>
+                  <Td>
+                    <span style={{ color: 'green' }}>{repo.status}</span>
+                  </Td>
+                </Tr>
+              ))}
+            </Tbody>
       </Table>
 
       {/* Pagination */}
@@ -401,7 +469,7 @@ export const AdditionalPackages: React.FunctionComponent = () => {
           
           <ToggleGroup>
             <ToggleGroupItem
-              text={`Available${totalItems ? ` (${totalItems})` : ''}`}
+              text={`Available${hasViewedPackagesSelected ? ` (${totalAvailableItems - selectedCount})` : totalAvailableItems ? ` (${totalAvailableItems})` : ''}`}
               buttonId="toggle-available"
               isSelected={toggleSelected === 'toggle-available'}
               onChange={handleToggleChange}
@@ -536,111 +604,264 @@ export const AdditionalPackages: React.FunctionComponent = () => {
   };
 
   return (
-    <div style={{ display: 'flex', minHeight: '100vh' }}>
-      {/* Sidebar Navigation */}
-      <div style={{ 
-        width: '250px', 
-        backgroundColor: '#f8f9fa', 
-        borderRight: '1px solid #d1d1d1',
+    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>
+      {/* Top Control Panel */}
+      <div style={{
+        backgroundColor: '#f8f9fa',
+        borderBottom: '1px solid #d1d1d1',
         padding: '20px',
-        overflowY: 'auto',
-        flexShrink: 0
+        zIndex: 1000
       }}>
-        <h3 style={{ marginBottom: '20px', color: '#333' }}>Image Builder Steps</h3>
-        <Nav onSelect={(event, itemId) => {
-          const stepId = typeof itemId === 'string' ? itemId : itemId.itemId;
-          handleStepChange(stepId);
-        }}>
-          <NavList>
-            <NavItem 
-              itemId="custom-repositories" 
-              isActive={activeStep === 'custom-repositories'}
-              icon={<RepositoryIcon />}
-              style={{
-                backgroundColor: activeStep === 'custom-repositories' ? '#e7f1ff' : 'transparent',
-                border: activeStep === 'custom-repositories' ? '2px solid #0066cc' : '2px solid transparent',
-                borderRadius: '6px',
-                marginBottom: '8px',
-                padding: '12px',
-                transition: 'all 0.2s ease',
-                cursor: 'pointer'
-              }}
-            >
-              <div style={{ 
-                display: 'flex', 
-                alignItems: 'center',
-                color: activeStep === 'custom-repositories' ? '#0066cc' : '#333'
-              }}>
-                <RepositoryIcon style={{ 
-                  marginRight: '12px', 
-                  color: activeStep === 'custom-repositories' ? '#0066cc' : '#666'
-                }} />
-                <span style={{ 
-                  fontWeight: activeStep === 'custom-repositories' ? '600' : '400'
-                }}>
-                  Step 1: Custom Repositories
-                </span>
-              </div>
-            </NavItem>
-            <NavItem 
-              itemId="additional-packages" 
-              isActive={activeStep === 'additional-packages'}
-              icon={<PackageIcon />}
-              style={{
-                backgroundColor: activeStep === 'additional-packages' ? '#e7f1ff' : 'transparent',
-                border: activeStep === 'additional-packages' ? '2px solid #0066cc' : '2px solid transparent',
-                borderRadius: '6px',
-                marginBottom: '8px',
-                padding: '12px',
-                transition: 'all 0.2s ease',
-                cursor: 'pointer'
-              }}
-            >
-              <div style={{ 
-                display: 'flex', 
-                alignItems: 'center',
-                color: activeStep === 'additional-packages' ? '#0066cc' : '#333'
-              }}>
-                <PackageIcon style={{ 
-                  marginRight: '12px', 
-                  color: activeStep === 'additional-packages' ? '#0066cc' : '#666'
-                }} />
-                <span style={{ 
-                  fontWeight: activeStep === 'additional-packages' ? '600' : '400'
-                }}>
-                  Step 2: Additional Packages
-                </span>
-              </div>
-            </NavItem>
-          </NavList>
-        </Nav>
-      </div>
-
-      {/* Main Content Area */}
-      <div style={{ flex: 1, padding: '20px' }}>
-        {/* Breadcrumb */}
         <div style={{ marginBottom: '20px' }}>
-          <Breadcrumb>
-            <BreadcrumbItem>Image Builder</BreadcrumbItem>
-            <BreadcrumbItem isActive>
-              {activeStep === 'custom-repositories' ? 'Custom Repositories' : 'Additional Packages'}
-            </BreadcrumbItem>
-          </Breadcrumb>
+          <h1 style={{ margin: 0, fontSize: '24px', fontWeight: '600' }}>Image Builder UI Controls</h1>
+        </div>
+
+        {/* Feature Toggles */}
+        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>
+          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
+            <div style={{
+              width: '44px',
+              height: '24px',
+              backgroundColor: '#0066cc',
+              borderRadius: '12px',
+              position: 'relative',
+              cursor: 'pointer',
+              transition: 'background-color 0.2s ease'
+            }}>
+              <div style={{
+                width: '20px',
+                height: '20px',
+                backgroundColor: 'white',
+                borderRadius: '50%',
+                position: 'absolute',
+                top: '2px',
+                left: '22px',
+                transition: 'left 0.2s ease',
+                boxShadow: '0 2px 4px rgba(0,0,0,0.2)'
+              }} />
+            </div>
+            <label htmlFor="toggle-search" style={{ fontSize: '14px', fontWeight: '500', cursor: 'pointer' }}>
+              Search Functionality
+            </label>
+          </div>
+
+          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
+            <div style={{
+              width: '44px',
+              height: '24px',
+              backgroundColor: '#0066cc',
+              borderRadius: '12px',
+              position: 'relative',
+              cursor: 'pointer',
+              transition: 'background-color 0.2s ease'
+            }}>
+              <div style={{
+                width: '20px',
+                height: '20px',
+                backgroundColor: 'white',
+                borderRadius: '50%',
+                position: 'absolute',
+                top: '2px',
+                left: '22px',
+                transition: 'left 0.2s ease',
+                boxShadow: '0 2px 4px rgba(0,0,0,0.2)'
+              }} />
+            </div>
+            <label htmlFor="toggle-pagination" style={{ fontSize: '14px', fontWeight: '500', cursor: 'pointer' }}>
+              Pagination
+            </label>
+          </div>
+
+          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
+            <div style={{
+              width: '44px',
+              height: '24px',
+              backgroundColor: '#0066cc',
+              borderRadius: '12px',
+              position: 'relative',
+              cursor: 'pointer',
+              transition: 'background-color 0.2s ease'
+            }}>
+              <div style={{
+                width: '20px',
+                height: '20px',
+                backgroundColor: 'white',
+                borderRadius: '50%',
+                position: 'absolute',
+                top: '2px',
+                left: '22px',
+                transition: 'left 0.2s ease',
+                boxShadow: '0 2px 4px rgba(0,0,0,0.2)'
+              }} />
+            </div>
+            <label htmlFor="toggle-selection" style={{ fontSize: '14px', fontWeight: '500', cursor: 'pointer' }}>
+              Item Selection
+            </label>
+          </div>
+
+          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
+            <div style={{
+              width: '44px',
+              height: '24px',
+              backgroundColor: '#0066cc',
+              borderRadius: '12px',
+              position: 'relative',
+              cursor: 'pointer',
+              transition: 'background-color 0.2s ease'
+            }}>
+              <div style={{
+                width: '20px',
+                height: '20px',
+                backgroundColor: 'white',
+                borderRadius: '50%',
+                position: 'absolute',
+                top: '2px',
+                left: '22px',
+                transition: 'left 0.2s ease',
+                boxShadow: '0 2px 4px rgba(0,0,0,0.2)'
+              }} />
+            </div>
+            <label htmlFor="toggle-tabs" style={{ fontSize: '14px', fontWeight: '500', cursor: 'pointer' }}>
+              Horizontal Tabs
+            </label>
+            </div>
+
+          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
+            <div style={{
+              width: '44px',
+              height: '24px',
+              backgroundColor: '#0066cc',
+              borderRadius: '12px',
+              position: 'relative',
+              cursor: 'pointer',
+              transition: 'background-color 0.2s ease'
+            }}>
+              <div style={{
+                width: '20px',
+                height: '20px',
+                backgroundColor: 'white',
+                borderRadius: '50%',
+                position: 'absolute',
+                top: '2px',
+                left: '22px',
+                transition: 'left 0.2s ease',
+                boxShadow: '0 2px 4px rgba(0,0,0,0.2)'
+              }} />
+            </div>
+            <label htmlFor="toggle-sidebar" style={{ fontSize: '14px', fontWeight: '500', cursor: 'pointer' }}>
+              Sidebar Navigation
+            </label>
+          </div>
         </div>
+      </div>
 
-        {/* Custom Repositories Step */}
+      {/* Main Content with Sidebar */}
+      <div style={{ display: 'flex', flex: 1 }}>
+        {/* Left Sidebar Navigation */}
         <div style={{ 
-          marginBottom: '40px',
-          display: activeStep === 'custom-repositories' ? 'block' : 'none'
+          width: '250px', 
+          backgroundColor: '#f8f9fa', 
+          borderRight: '1px solid #d1d1d1',
+          padding: '20px',
+          overflowY: 'auto',
+          flexShrink: 0
         }}>
-          {renderCustomRepositories()}
+          <h3 style={{ marginBottom: '20px', color: '#333' }}>Image Builder Steps</h3>
+          <Nav onSelect={(event, itemId) => {
+            const stepId = typeof itemId === 'string' ? itemId : itemId.itemId;
+            handleStepChange(stepId);
+          }}>
+            <NavList>
+              <NavItem 
+                itemId="custom-repositories" 
+                isActive={activeStep === 'custom-repositories'}
+                icon={<RepositoryIcon />}
+                style={{
+                  backgroundColor: activeStep === 'custom-repositories' ? '#e7f1ff' : 'transparent',
+                  border: activeStep === 'custom-repositories' ? '2px solid #0066cc' : '2px solid transparent',
+                  borderRadius: '6px',
+                  marginBottom: '8px',
+                  padding: '12px',
+                  transition: 'all 0.2s ease',
+                  cursor: 'pointer'
+                }}
+              >
+                <div style={{ 
+                  display: 'flex', 
+                  alignItems: 'center',
+                  color: activeStep === 'custom-repositories' ? '#0066cc' : '#333'
+                }}>
+                  <RepositoryIcon style={{ 
+                    marginRight: '12px', 
+                    color: activeStep === 'custom-repositories' ? '#0066cc' : '#666'
+                  }} />
+                  <span style={{ 
+                    fontWeight: activeStep === 'custom-repositories' ? '600' : '400'
+                  }}>
+                    Step 1: Custom Repositories
+                  </span>
+                </div>
+              </NavItem>
+              <NavItem 
+                itemId="additional-packages" 
+                isActive={activeStep === 'additional-packages'}
+                icon={<PackageIcon />}
+                style={{
+                  backgroundColor: activeStep === 'additional-packages' ? '#e7f1ff' : 'transparent',
+                  border: activeStep === 'additional-packages' ? '2px solid #0066cc' : '2px solid transparent',
+                  borderRadius: '6px',
+                  marginBottom: '8px',
+                  padding: '12px',
+                  transition: 'all 0.2s ease',
+                  cursor: 'pointer'
+                }}
+              >
+                <div style={{ 
+                  display: 'flex', 
+                  alignItems: 'center',
+                  color: activeStep === 'additional-packages' ? '#0066cc' : '#333'
+                }}>
+                  <PackageIcon style={{ 
+                    marginRight: '12px', 
+                    color: activeStep === 'additional-packages' ? '#0066cc' : '#666'
+                  }} />
+                  <span style={{ 
+                    fontWeight: activeStep === 'additional-packages' ? '600' : '400'
+                  }}>
+                    Step 2: Additional Packages
+                  </span>
+                </div>
+              </NavItem>
+            </NavList>
+          </Nav>
         </div>
 
-        {/* Additional Packages Step */}
-        <div style={{
-          display: activeStep === 'additional-packages' ? 'block' : 'none'
-        }}>
-          {renderAdditionalPackages()}
+        {/* Main Content Area */}
+        <div style={{ flex: 1, padding: '20px' }}>
+          {/* Breadcrumb */}
+          <div style={{ marginBottom: '20px' }}>
+            <Breadcrumb>
+              <BreadcrumbItem>Image Builder</BreadcrumbItem>
+              <BreadcrumbItem isActive>
+                {activeStep === 'custom-repositories' ? 'Custom Repositories' : 'Additional Packages'}
+              </BreadcrumbItem>
+            </Breadcrumb>
+          </div>
+
+          {/* Custom Repositories Step */}
+          <div style={{ 
+            marginBottom: '40px',
+            display: activeStep === 'custom-repositories' ? 'block' : 'none'
+          }}>
+            {renderCustomRepositories()}
+          </div>
+
+          {/* Additional Packages Step */}
+          <div style={{
+            display: activeStep === 'additional-packages' ? 'block' : 'none'
+          }}>
+            {renderAdditionalPackages()}
+          </div>
         </div>
       </div>
     </div>
-- 
2.32.0 (Apple Git-132)

